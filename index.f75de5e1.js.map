{"mappings":"AAAA;AAEA,MAAM,SAAS;OAAI,SAAS,gBAAgB,CAAC;CAAc;AAE3D;;;;CAIC,GACD,MAAM,mBAAmB,CAAC,OAAS,IAAI,CAAC,EAAE,CAAC,WAAW,KAAK,KAAK,KAAK,CAAC;AAEtE;;;;CAIC,GACD,MAAM,qBAAqB,CAAC;IAC1B,KAAK,MAAM,MAAM,IAAK;QACpB,MAAM,oBAAoB,OAAO,GAAG,WAAW;QAE/C,IAAI,mBACF,OAAO,IACJ,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EACpB,KAAK,CAAC,KACN,GAAG,CAAC,kBACJ,IAAI,CAAC;IAEZ;IAEA,OAAO,iBAAiB;AAC1B;AAEA;;;;CAIC,GACD,MAAM,oBAAoB,CAAC;IACzB,cAAc,OAAO,CAAC,CAAC;QACrB,MAAM,eAAe,SAAS,aAAa,CAAC;QAE5C,aAAa,OAAO,GAAG,MAAM,EAAE;QAC/B,aAAa,SAAS,CAAC,GAAG,CAAC;QAC3B,aAAa,SAAS,GAAG,mBAAmB,MAAM,IAAI;QAEtD,MAAM,WAAW,GAAG,mBAAmB,MAAM,IAAI;QACjD,MAAM,aAAa,CAAC,OAAO,CAAC;IAC9B;AACF;AAEA,kBAAkB","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst inputs = [...document.querySelectorAll('form input')];\n\n/**\n * @function getUpperCaseWord\n * @param {string} word;\n * @returns {string}\n */\nconst getUpperCaseWord = (word) => word[0].toUpperCase() + word.slice(1);\n\n/**\n * @function getStringFormat\n * @param {string} str\n * @returns {string}\n */\nconst getFormattedString = (str) => {\n  for (const ch of str) {\n    const isUpperCaseLetter = ch !== ch.toLowerCase();\n\n    if (isUpperCaseLetter) {\n      return str\n        .replace(ch, ` ${ch}`)\n        .split(' ')\n        .map(getUpperCaseWord)\n        .join(' ');\n    }\n  }\n\n  return getUpperCaseWord(str);\n};\n\n/**\n * @function addedLabelElement\n * @param {Element[]} arrayOfInputs;\n * @returns {void}\n */\nconst addedLabelElement = (arrayOfInputs) => {\n  arrayOfInputs.forEach((input) => {\n    const labelElement = document.createElement('label');\n\n    labelElement.htmlFor = input.id;\n    labelElement.classList.add('field-label');\n    labelElement.innerText = getFormattedString(input.name);\n\n    input.placeholder = getFormattedString(input.name);\n    input.parentElement.prepend(labelElement);\n  });\n};\n\naddedLabelElement(inputs);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}